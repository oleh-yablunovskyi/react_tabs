{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","React","memo","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","handleTabClick","title","content","App","useState","setSelectedTab","selectTab","useCallback","ReactDOM","render","document","getElementById"],"mappings":"2NAWaA,EAAwBC,IAAMC,MACzC,YAIO,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EACJH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GASrD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GACR,OACE,oBAEE,UAAQ,MACRE,UAAWE,IACT,CAAE,YAAaJ,EAAIC,KAAOH,EAAYG,KAJ1C,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBAtBF,SAACN,GAClBA,EAAIC,KAAOH,EAAYG,IACzBJ,EAAcG,GAoBaO,CAAeP,IAHhC,SAKGA,EAAIQ,SAXFR,EAAIC,WAmBnB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,gBC9CVd,EAAc,CACzB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOG,EAAP,KAAoBc,EAApB,KAEMC,EAAYC,uBAAY,SAACd,GAC7BY,EAAeZ,KACd,IAEH,OACE,sBAAKE,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYU,SAGlC,cAAChB,EAAD,CACEG,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAAegB,QC3BvBE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.14047910.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = React.memo(\n  ({\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  }) => {\n    const selectedTab = (\n      tabs.find(tab => tab.id === selectedTabId) || tabs[0]\n    );\n\n    const handleTabClick = (tab: Tab) => {\n      if (tab.id !== selectedTab.id) {\n        onTabSelected(tab);\n      }\n    };\n\n    return (\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => {\n              return (\n                <li\n                  key={tab.id}\n                  data-cy=\"Tab\"\n                  className={classNames(\n                    { 'is-active': tab.id === selectedTab.id },\n                  )}\n                >\n                  <a\n                    href={`#${tab.id}`}\n                    data-cy=\"TabLink\"\n                    onClick={() => handleTabClick(tab)}\n                  >\n                    {tab.title}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    );\n  },\n);\n","import React, { useCallback, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tab } from './types/Tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const selectTab = useCallback((tab: Tab) => {\n    setSelectedTab(tab);\n  }, []);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={selectTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}